name: auto build docker

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

permissions:
  packages: write  # 使 GITHUB_TOKEN 具有推送到 GHCR 的权限

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      CURRENT_BRANCH: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compare latest release version
        id: get_release_version
        run: |
          set +e
          # 运行命令并将结果存储到变量
          # 本仓库使用的是 v2.8.2格式
          #release_version 是 2.8.2格式
          release_version=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name| sed 's/^v//'| sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          #原仓库是2.8.2格式
          source_release_version=$(curl -s https://api.github.com/repos/adnanh/webhook/releases/latest | jq -r .tag_name| sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          if [ $release_version == $source_release_version ]; then
            echo "两个仓库tag相同,无需构建, $source_release_version"
            exit 1
          else
            echo "当前本仓库最新tag为:$release_version,原仓库最新tag为:$source_release_version"
          fi
          echo "SOURCE_RELEASE_VERSION=$source_release_version" >> $GITHUB_ENV  # 设置环境变量供后续步骤使用
          source_release_version="v$source_release_version"
          echo "RELEASE_VERSION=$source_release_version" >> $GITHUB_ENV  # 设置环境变量供后续步骤使用

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/webhook
          flavor: latest=true
          tags: |
            type=semver,pattern={{raw}},value=${{ env.RELEASE_VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/webhook:latest,ghcr.io/${{ github.repository_owner }}/webhook:${{ env.RELEASE_VERSION  }}
          build-args: |
            WEBHOOK_VERSION=${{ env.SOURCE_RELEASE_VERSION }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
